{"version":3,"sources":["Roulette/store/RouletteStore.js","Roulette/store/index.js","Roulette/RouletteWheel.jsx","Roulette/ChooseRestaurant.jsx","Roulette/CheckChoosedRestaurant.jsx","Roulette/RoulettePage.jsx","Roulette/index.js","Home.jsx","Navigation.jsx","App.js","reportWebVitals.js","index.js"],"names":["formedRestList","ele","randomColor","Math","floor","random","option","style","backgroundColor","randomRestList","region","random_region_num","rest_list_len","RestaurantList","payco","list","length","random_rest_num","RouletteStore","observable","spin","setSpin","boolean","this","popup","setPopup","setRegion","prizeNumber","setPrizeNumber","choosedRestaurantList","setChoosedRestaurantList","newRestList","res","map","setChoosedRestaurantListRandom","count","temp_list","i","push","reaction","value","console","log","store","RouletteWheel","observer","useState","message","setMessage","id","onClick","mustStartSpinning","data","textColors","onStopSpinning","today","Date","getHours","className","addRestaurant","MenuTemplate","props","addRegionRestaurants","name","element","PaycoRestaurantTable","paycoData","AddCustomRestaurant","inputRef","useRef","ref","current","ChooseRestaurant","region_options","label","Header","Dropdown","open","setOpen","dropdownLists","e","target","children","DropdownAndButton","buttonClick","CheckChoosedRestaurant","restaurantList","temp_data","minusRestaurant","header","getDay","toDateString","RoulettePage","Home","Navigation","to","App","path","exact","component","Roulette","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d12b432e.chunk.js","sourcesContent":["import { observable, reaction } from \"mobx\";\r\nimport RestaurantList from \"./RestaurantList.json\";\r\n\r\nfunction formedRestList(ele) {\r\n  let randomColor = [\r\n    Math.floor(Math.random() * 256),\r\n    Math.floor(Math.random() * 256),\r\n    Math.floor(Math.random() * 256),\r\n  ];\r\n\r\n  randomColor = `rgba(${randomColor[0]},${randomColor[1]},${randomColor[2]})`;\r\n  return {\r\n    option: ele,\r\n    style: { backgroundColor: randomColor },\r\n  };\r\n}\r\n\r\nfunction randomRestList(region) {\r\n  let random_region_num = region === 3 ? Math.floor(Math.random() * 3) : region;\r\n  let rest_list_len = RestaurantList.payco[random_region_num].list.length;\r\n  let random_rest_num = Math.floor(Math.random() * rest_list_len);\r\n\r\n  return RestaurantList.payco[random_region_num].list[random_rest_num];\r\n}\r\n\r\nconst RouletteStore = observable({\r\n  spin: false,\r\n  setSpin(boolean) {\r\n    this.spin = boolean;\r\n  },\r\n  popup: true,\r\n  setPopup(boolean) {\r\n    this.popup = boolean;\r\n  },\r\n  region: 0,\r\n  setRegion(region) {\r\n    this.region = region;\r\n  },\r\n  prizeNumber: Math.floor(Math.random() * 2),\r\n  setPrizeNumber() {\r\n    this.prizeNumber = Math.floor(\r\n      Math.random() * this.choosedRestaurantList.length\r\n    );\r\n  },\r\n  choosedRestaurantList: [\r\n    formedRestList(randomRestList(3)),\r\n    formedRestList(randomRestList(3)),\r\n  ],\r\n\r\n  setChoosedRestaurantList(newRestList) {\r\n    const res = newRestList.map((ele) => {\r\n      if (typeof ele === \"string\") ele = formedRestList(ele);\r\n      return ele;\r\n    });\r\n\r\n    this.choosedRestaurantList = res;\r\n  },\r\n\r\n  setChoosedRestaurantListRandom(count, region) {\r\n    let temp_list = [];\r\n    for (var i = 0; i < count; i++) {\r\n      temp_list.push(formedRestList(randomRestList(region)));\r\n    }\r\n    this.choosedRestaurantList = temp_list;\r\n  },\r\n});\r\n\r\nreaction(\r\n  () => RouletteStore.choosedRestaurantList,\r\n  (value, reaction) => {\r\n    console.log(`값이 ${value}로 바뀜`);\r\n    RouletteStore.setPopup(false);\r\n  }\r\n);\r\n\r\nreaction(\r\n  () => RouletteStore.spin,\r\n  (value, reaction) => {\r\n    console.log(`값이 ${value}로 바뀜`);\r\n    if (value === false) {\r\n      RouletteStore.setPopup(true);\r\n    } else {\r\n      RouletteStore.setPopup(false);\r\n    }\r\n  }\r\n);\r\n\r\nexport default RouletteStore;\r\n","import RouletteStore from \"./RouletteStore\";\r\nexport default RouletteStore;\r\n","import { useState } from \"react\";\r\n\r\nimport { Wheel } from \"react-custom-roulette\";\r\nimport { observer } from \"mobx-react\";\r\nimport RouletteStore from \"./store\";\r\n\r\nconst store = RouletteStore;\r\n\r\nconst RouletteWheel = observer(() => {\r\n  const [message, setMessage] = useState(\"룰렛을 onClick으로 돌려봐♥\");\r\n\r\n  function endRoulette() {\r\n    const today = new Date();\r\n    setMessage(\r\n      `${today.getHours() < 15 ? \"점심\" : \"저녁\"}은 ${\r\n        store.choosedRestaurantList[store.prizeNumber].option\r\n      }!!!`\r\n    );\r\n    store.setPrizeNumber();\r\n    store.setSpin(false);\r\n  }\r\n\r\n  return (\r\n    <div id=\"roulette\" onClick={() => store.setSpin(true)}>\r\n      <Wheel\r\n        mustStartSpinning={store.spin}\r\n        data={store.choosedRestaurantList}\r\n        prizeNumber={store.prizeNumber}\r\n        textColors={[\"#ffffff\"]}\r\n        onStopSpinning={endRoulette}\r\n      />\r\n      <div\r\n        id=\"popupDiv\"\r\n        className={\r\n          (store.spin === true) | (store.popup === false) ? \"hide\" : \"\"\r\n        }\r\n      >\r\n        {message}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default RouletteWheel;\r\n","import { useRef } from \"react\";\r\nimport RestaurantList from \"./store/RestaurantList.json\";\r\nimport RouletteStore from \"./store\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst store = RouletteStore;\r\n\r\nfunction addRegionRestaurants(data) {\r\n  data.list.map((ele) => {\r\n    store.setChoosedRestaurantList([...store.choosedRestaurantList, ele]);\r\n    return 0;\r\n  });\r\n}\r\n\r\nfunction addRestaurant(data) {\r\n  store.setChoosedRestaurantList([...store.choosedRestaurantList, data]);\r\n  return 0;\r\n}\r\n\r\nconst MenuTemplate = observer((props) => {\r\n  const data = props.data;\r\n  return (\r\n    <tr>\r\n      <th\r\n        className=\"region\"\r\n        onClick={store.spin === false ? () => addRegionRestaurants(data) : null}\r\n      >\r\n        {data.name}\r\n      </th>\r\n      {data.list.map((element) => {\r\n        return (\r\n          <td\r\n            className=\"restaurants\"\r\n            onClick={store.spin === false ? () => addRestaurant(element) : null}\r\n          >\r\n            {element}\r\n          </td>\r\n        );\r\n      })}\r\n    </tr>\r\n  );\r\n});\r\n\r\nconst PaycoRestaurantTable = (props) => {\r\n  const payco = props.paycoData;\r\n  return (\r\n    <>\r\n      <p className=\"subTitle\"># 페이코 식당은 여기 다 있지롱~</p>\r\n      <p className=\"descriptionTitle\">\r\n        '오리', '미금', '수내'를 누르면 어떻게 될까?\r\n      </p>\r\n      <table id=\"paycoDiv\">\r\n        {payco.map((ele) => {\r\n          return <MenuTemplate data={ele} />;\r\n        })}\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nconst AddCustomRestaurant = observer(() => {\r\n  const inputRef = useRef();\r\n  return (\r\n    <>\r\n      <p className=\"descriptionTitle\">테이블에 없는 식당을 추가하고 싶다면?</p>\r\n      <input id=\"inputDiv\" ref={inputRef}></input>\r\n      <button\r\n        id=\"addRestaurantButton\"\r\n        onClick={\r\n          store.spin === false\r\n            ? () => addRestaurant(inputRef.current.value)\r\n            : null\r\n        }\r\n      >\r\n        +\r\n      </button>\r\n    </>\r\n  );\r\n});\r\n\r\nconst ChooseRestaurant = () => {\r\n  const payco = RestaurantList.payco;\r\n\r\n  return (\r\n    <div id=\"restaurantDiv\">\r\n      <PaycoRestaurantTable paycoData={payco} />\r\n      <AddCustomRestaurant />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChooseRestaurant;\r\n","import { useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport RouletteStore from \"./store\";\r\n\r\nconst store = RouletteStore;\r\n\r\nconst region_options = [\r\n  { value: 0, label: \"오리\" },\r\n  { value: 1, label: \"미금\" },\r\n  { value: 2, label: \"수내\" },\r\n  { value: 3, label: \"전체\" },\r\n];\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <p className=\"subTitle\"># 룰렛 항목을 볼까?</p>\r\n      <p className=\"descriptionTitle\">\r\n        빼고싶은 항목을 눌러서 제거 할 수 있어! 고민하는 너를 위해 준비한\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Dropdown = observer((props) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const dropdownLists = region_options.map((ele) => {\r\n    return (\r\n      <div\r\n        id={ele.value}\r\n        onClick={\r\n          store.spin === false\r\n            ? (e) => {\r\n                store.setRegion(e.target.id);\r\n                setOpen(false);\r\n              }\r\n            : null\r\n        }\r\n      >\r\n        {ele.label}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div id={props.id} className={props.className}>\r\n      <div id=\"resultsDiv\" onClick={() => setOpen(!open)}>\r\n        {region_options[store.region].label}\r\n        <span id=\"dropdownArrow\">{open === true ? \"▲\" : \"▼\"}</span>\r\n        <div id=\"dropdownLists\" className={open === true ? null : \"closed\"}>\r\n          {dropdownLists}\r\n        </div>\r\n      </div>\r\n      {props.children}\r\n    </div>\r\n  );\r\n});\r\n\r\nconst DropdownAndButton = observer((props) => {\r\n  return (\r\n    <Dropdown id=\"choosingAreaDropdown\" className={props.className}>\r\n      <div\r\n        id=\"chooseOneButton\"\r\n        className={props.className}\r\n        onClick={props.buttonClick}\r\n      >\r\n        추천 식당\r\n      </div>\r\n    </Dropdown>\r\n  );\r\n});\r\n\r\nconst CheckChoosedRestaurant = observer(() => {\r\n  let data = store.choosedRestaurantList;\r\n\r\n  function minusRestaurant(data) {\r\n    let temp_data = [];\r\n    store.choosedRestaurantList.map((ele) => {\r\n      if (ele.option !== data || store.choosedRestaurantList.length === 1) {\r\n        temp_data.push(ele);\r\n      }\r\n      return 0;\r\n    });\r\n    store.setChoosedRestaurantList(temp_data);\r\n  }\r\n\r\n  function chooseOneRestaurant(region) {\r\n    // mobx에서 random 로직 진행\r\n    store.setChoosedRestaurantListRandom(1, region);\r\n  }\r\n\r\n  const restaurantList = data.map((ele) => {\r\n    return (\r\n      <li\r\n        onClick={\r\n          store.spin === false ? () => minusRestaurant(ele.option) : null\r\n        }\r\n      >\r\n        {ele.option}\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div id=\"checkRestaurant\">\r\n      <Header />\r\n      <DropdownAndButton\r\n        className=\"dropdownAndButton\"\r\n        buttonClick={\r\n          store.spin === false ? () => chooseOneRestaurant(store.region) : null\r\n        }\r\n      />\r\n      <ul id=\"checkRestaurantList\">{restaurantList}</ul>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default CheckChoosedRestaurant;\r\n","import React from \"react\";\r\nimport RouletteWheel from \"./RouletteWheel\";\r\nimport ChooseRestaurant from \"./ChooseRestaurant\";\r\nimport CheckChoosedRestaurant from \"./CheckChoosedRestaurant\";\r\nimport \"./css/RoulettePage.css\";\r\n\r\nconst Header = () => {\r\n  const today = new Date();\r\n  const day_in_kor = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\r\n  const header = `당신의 ${day_in_kor[today.getDay()]}요일 ${\r\n    today.getHours() < 15 ? \"점심\" : \"저녁\"\r\n  } 운명은 여기에 달려있어...!!`;\r\n\r\n  return (\r\n    <div id=\"titleDiv\">\r\n      <p id=\"dateParag\">{today.toDateString()}</p>\r\n      {header}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RoulettePage = () => {\r\n  return (\r\n    <div id=\"rouletteContainer\">\r\n      <Header />\r\n      <RouletteWheel />\r\n      <ChooseRestaurant />\r\n      <CheckChoosedRestaurant />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoulettePage;\r\n","import RoulettePage from \"./RoulettePage\";\r\nexport default RoulettePage;\r\n","import React from \"react\";\r\n\r\nfunction Home() {\r\n  return <h1>This is Home...!</h1>;\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <div id=\"navigationDiv\">\r\n      <Link to=\"/\">Home</Link>\r\n      <Link to=\"/roulette\">Roulette</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import \"./App.css\";\nimport Roulette from \"./Roulette/index\";\nimport Home from \"./Home\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Navigation from \"./Navigation\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation />\n      <h1 id=\"header\">HIHI This is just for deploying pages in Github!</h1>\n      <Route path=\"/\" exact={true} component={Home}></Route>\n      <Route path=\"/roulette\" component={Roulette}></Route>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}